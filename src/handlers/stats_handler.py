from telegram import Update
from telegram.ext import ContextTypes
from sqlalchemy.orm import Session
from src.database.models import User, Statistics

class StatsHandler:
    def __init__(self, engine):
        self.engine = engine

    async def show_stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with Session(self.engine) as session:
            user = session.query(User).filter_by(telegram_id=user_id).first()
            
            if not user:
                await update.message.reply_text("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º!")
                return
            
            stats = user.statistics[0] if user.statistics else None
            
            if not stats:
                await update.message.reply_text("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º!")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            stats_message = (
                "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
                f"–°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats.messages_count}\n"
                f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—à–∏–±–æ–∫: {stats.corrections_count}\n"
                f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π: {stats.exercises_completed}\n"
                f"–î–Ω–µ–π –ø–æ–¥—Ä—è–¥: {user.streak_days}\n"
            )
            
            await update.message.reply_text(stats_message) 